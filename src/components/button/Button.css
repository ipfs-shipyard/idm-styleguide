@import "../../styles/colors";
@import "../../styles/mixins/typography";

.button {
    position: relative;
    min-width: 12rem;
    height: 5rem;
    overflow: hidden;
    padding: 0 5rem;
    border: none;
    transition-property: background-color, color, border-color, opacity;
    transition-duration: 0.2s;
    transition-timing-function: ease;

    &:not([disabled]) {
        cursor: pointer;
    }

    &.fullWidth {
        width: 100%;
    }

    &.primary {
        background-color: var(--color-armadillo);
        color: var(--color-white);

        &:active,
        &:focus {
            background-color: var(--color-dune);
        }

        &:hover {
            background-color: color(var(--color-armadillo) alpha(0.8));
        }

        &[disabled] {
            background-color: color(var(--color-armadillo) alpha(0.2));
        }

        &.loading {
            border-color: transparent;
            background-color: color(var(--color-armadillo) alpha(0.2));
            color: var(--color-white);
        }
    }

    &.secondary {
        border: 0.1rem solid var(--color-armadillo);
        background-color: transparent;
        color: var(--color-black);

        &:active,
        &:focus {
            border-color: var(--color-armadillo);
            box-shadow: inset 0 0 0 0.1rem var(--color-armadillo);
        }

        &:hover {
            border-color: color(var(--color-armadillo) alpha(0.6));
            color: color(var(--color-black) alpha(0.8));
        }

        &[disabled] {
            opacity: 0.3;
        }

        &.loading {
            border: none;
            background-color: color(var(--color-armadillo) alpha(0.2));
            color: var(--color-white);
        }
    }

    /* ==========================================================================
      Text + feedback
      ========================================================================== */

    & .progressBar {
        position: absolute;
        top: 0;
        left: 0;
        z-index: 1;
    }

    & .textBlock {
        @mixin typography-body-2 rem;
        position: relative;
        height: 100%;
        z-index: 2;
        transform: translateY(0);
        display: flex;
        justify-content: center;
        align-items: center;
        transition: transform 0.2s ease;
    }

    & .successBlock,
    & .errorBlock {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1;
        transform: translateY(100%);
        display: flex;
        justify-content: center;
        align-items: center;
        transition: transform 0.2s ease;

        & .feedbackIcon {
            font-size: 1.6rem;
        }
    }

    & .crossmark {
        & svg path:nth-of-type(1) {
            transition: stroke-dashoffset 0.1s linear 0.3s;
        }

        & svg path:nth-of-type(2) {
            transition: stroke-dashoffset 0.1s linear 0.2s;
        }
    }

    & .checkmark {
        transition: stroke-dashoffset 0.2s linear 0.2s;
    }

    & .checkmark,
    & .crossmark {
        font-size: 1rem;
        stroke-dasharray: 20;
        stroke-dashoffset: 20;
    }

    &.success {
        & .successBlock {
            transform: translateY(0);

            & .checkmark {
                stroke-dashoffset: 0;
            }
        }
    }

    &.error {
        & .errorBlock {
            transform: translateY(0);

            & .crossmark {
                stroke-dashoffset: 0;
            }
        }
    }

    &.primary,
    &.secondary {
        & .progressBar {
            background-color: color(var(--color-armadillo) alpha(0.2));
        }

        & .successBlock {
            background-color: var(--color-ocean-green);

            & .checkmark svg path {
                stroke: var(--color-white);
            }
        }

        & .errorBlock {
            background-color: var(--color-monza);

            & .crossmark svg path {
                stroke: var(--color-white);
            }
        }
    }

    &.success {
        & .textBlock {
            transform: translateY(-100%);
        }

        & .successBlock {
            transform: translateY(0);
        }
    }

    &.error {
        & .textBlock {
            transform: translateY(-100%);
        }

        & .errorBlock {
            transform: translateY(0);
        }
    }
}
